<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="colorDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>23, 15</value>
  </metadata>
  <data name="rtfTraderSmarts.Text" xml:space="preserve">
    <value>​TS TradePlan for NQ - Friday March 7, 2025
Contract: NQ H25 
TraderSmarts Numbers for NQ:
23765.25, 22801.00, 22713.00, 22556.75, 22422.00, 22363.25, 22335.00, 22322.00, 22298.25, 22258.50, 22234.00, 22187.50, 22166.00, 22159.00, 22133.75, 22086.25, 22031.75, 22028.75, 22024.25, 21987.25, 21978.75, 21972.75, 21964.50, 21948.00, 21923.75, 21916.50, 21904.75, 21885.75, 21879.50, 21875.50, 21833.75, 21818.75, 21807.25, 21787.75, 21757.25, 21752.00, 21721.00, 21703.50, 21691.00, 21689.75, 21671.00, 21662.50, 21655.00, 21641.50, 21631.00, 21620.50, 21602.00, 21592.50, 21586.25, 21570.50, 21554.75, 21537.75, 21521.50, 21514.75, 21508.25, 21489.75, 21468.75, 21462.50, 21447.25, 21439.25, 21424.00, 21420.00, 21411.25, 21387.75, 21382.00, 21377.00, 21371.25, 21351.75, 21308.25, 21301.75, 21295.00, 21274.25, 21265.00, 21243.50, 21218.25, 21213.00, 21200.00, 21188.75, 21159.75, 21154.75, 21130.75, 21069.75, 21054.50, 21034.25, 20987.25, 20969.75, 20959.25, 20937.75, 20927.00, 20896.25, 20870.25, 20857.50, 20830.50, 20784.50, 20739.25, 20735.00, 20685.00, 20674.25, 20646.75, 20638.50, 20610.00, 20575.25, 20573.75, 20540.50, 20464.00, 20444.75, 20348.00, 20342.00, 20238.00, 20215.50, 20147.50, 20087.25, 19955.00, 19870.25, 19544.25, 19441.75, 19429.25, 19110.25

NQ Contract Notes: 

NQ Macro Technical View: 

NQ Execution/Target Zones:
20937.75 - 20927.00 Extreme Short
20464.00 - 20458.25 Highest Odds Short FTU
20348.00 - 20342.00 Range Short

20087.25 Line in the Sand

19955.00 Range Long
19441.75 - 19429.25 Highest Odds Long FTD
19110.25 Extreme Long

NQ MTS Numbers: 23426.00, 23225.00, 22569.00, 22176.00, 22123.75, 21925.00, 21317.75, 20827.25, 20458.25, 19950.00, 19722.25</value>
  </data>
  <data name="rtfKillpips.Text" xml:space="preserve">
    <value>$NQ1!: vix r1, 20449, vix r2, 20469, vix s1, 19729, vix r2, 19709, 1DexpMAX, 20486, 1DexpMIN, 19691, RD0, 20157, RD1, 20224, RD2, 20357, SD0, 20023, SD1, 19956, SD2, 19825, HV, 20090, VAH, 20567, VAL, 19616, range daily max, 20618, range daily min, 19560



$ES!!: vix r1, 5821, vix r2, 5826, vix s1, 5671, vix s2, 5667, 1DexpMAX, 5829, 1DexpMIN, 5663, RD0, 5760, RD1, 5774, RD2, 5801, SD0, 5732, SD1, 5718, SD2, 5691, HV, 5747, VAH, 5845, VAL, 5646, range daily max, 5856, range daily min, 5636
</value>
  </data>
  <data name="rtfMenthorQ.Text" xml:space="preserve">
    <value>$NQ1!: Call Resistance, 22000, Put Support, 20000, HVL, 20550, 1D Min, 19717.45, 1D Max, 20461.05, Call Resistance 0DTE, 20650, Put Support 0DTE, 20000, HVL 0DTE, 20310, Gamma Wall 0DTE, 20650, GEX 1, 20300, GEX 2, 19800, GEX 3, 19900, GEX 4, 20250, GEX 5, 20100, GEX 6, 20500, GEX 7, 19500, GEX 8, 19700, GEX 9, 19600, GEX 10, 19400


$ES1!: Call Resistance, 6000, Put Support, 5700, HVL, 5875, 1D Min, 5661.3, 1D Max, 5831.2, Call Resistance 0DTE, 5900, Put Support 0DTE, 5650, HVL 0DTE, 5845, Gamma Wall 0DTE, 5900, GEX 1, 5800, GEX 2, 5750, GEX 3, 5675, GEX 4, 5725, GEX 5, 5775, GEX 6, 5600, GEX 7, 5625, GEX 8, 5850, GEX 9, 5640, GEX 10, 5630</value>
  </data>
  <data name="rtfMancini.Text" xml:space="preserve">
    <value>Supports are: 5528-33 (major), 5519 (major), 5511, 5508, 5502, 5498, 5492 (major), 5482 (major), 5474, 5463-58 (major), 5450, 5445, 5438 (major), 5432, 5428, 5423, 5414 (major), 5404 (major), 5393, 5388, 5378 (major), 5372, 5363, 5345-50 (major), 5338, 5328 (major), 5322, 5311-16 (major).

Resistances are: 5528-33 (major), 5543, 5547, 5552 (major), 5560, 5567 (major), 5572, 5578 (major), 5585, 5589-91 (major), 5602, 5611 (major), 5625, 5630-33 (major), 5638, 5642 (major), 5650, 5655 (major), 5664, 5668, 5672 (major), 5679, 5683 (major), 5694, 5700-05 (major), 5710, 5714 (major), 5720, 5728-30 (major), 5737, 5745-50 (major), 5759, 5770 (major), 5778, 5785 (major).
</value>
  </data>
</root>